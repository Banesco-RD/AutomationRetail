version: 0.2
env:
  variables:
    TZ_NEW_VERSION: "true"
phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "Copying settings to configure maven..."
      - wget -c https://bolbuildutils.s3.amazonaws.com/utilsBOLDeploy.sh
      - chmod +x utilsBOLDeploy.sh ; ./utilsBOLDeploy.sh v1 $CODECOMMIT_REPOSITORY_NAME none
      - aws --version
      #- export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain banesco-backbase --domain-owner $BB_SHARED_ACCT_ID --query authorizationToken --output text`
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      #- aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 644970069543.dkr.ecr.us-east-1.amazonaws.com
      - npm ci
      - npm install @playwright/test@1.48.2
      - npx playwright install
      - npx playwright install-deps  
      #- npx playwright install --with-deps
      - npx playwright test
      - pwd
      - ls -al
      - ls -al playwright-report/ 
      - ls -al test-results/
      - ls -al my-report/
      - aws s3 cp my-report/ s3://bol-test-funcional/
      #- aws s3 cp test-results/ s3://bol-test-funcional/
  build:
    commands:
      # ************* TIME ZONE
      # To be applied at the end of scripts, when temporal image is created
      # Time Zone - Building and versioning image, after base image was created
      - echo "Generating version for build!! ..."
